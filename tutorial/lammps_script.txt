# Green-Kubo method via compute heat/flux and fix ave/correlate
# LAMMPS script
# Tim Burt 9/20/2017

# settings

variable	rho equal 0.6
variable        t equal 300
variable	rc equal 5.0

variable    p equal 200     # correlation length
variable    s equal 10      # sample interval
variable    d equal $p*$s   # dump interval

units real

# setup problem

atom_style	angle  # bonds angles only
bond_style	harmonic
angle_style	harmonic
dimension 	3
atom_modify	sort 1000 2.0
read_data 	cnt30.lammps group CNT

velocity	CNT create $t 17832

neighbor        2.0 bin
neigh_modify    delay 0 every 1

pair_style	 none
#pair_style      lj/cut ${rc}
#pair_coeff      * * 1E-4 1.52

fix		1 CNT momentum 1 linear 1 1 1 angular

# energy minimize structure

min_style	cg
dump		m1 CNT movie 100 simulation.m4v type type zoom 2.5 adiam 1.5 size 1280 720
#dump 		m0 CNT image 1000 pic.*.png type type zoom 4 size 1280 720
minimize	1.0e-4 1.0e-6 1000 10000

# 1st equilibration run

fix		2 CNT nvt temp $t $t 1.0
thermo		100
dump 		positions CNT xyz 100 step1_nvt.xyz
run_style 	verlet
run		50000

velocity	all scale $t

unfix		2

# thermal conductivity calculation

reset_timestep  0

compute         myKE all ke/atom
compute         myPE all pe/atom
compute         myStress all stress/atom NULL virial
compute         flux all heat/flux myKE myPE myStress
variable        Jx equal c_flux[1]/vol
variable        Jy equal c_flux[2]/vol
variable        Jz equal c_flux[3]/vol

fix	        3 CNT nve
fix             JJ CNT ave/correlate $s $p $d &
                c_flux[1] c_flux[2] c_flux[3] type auto &
	        file profile.heatflux ave running

variable        scale equal $s*dt/$t/$t/vol
variable        k11 equal trap(f_JJ[3])*${scale}
variable        k22 equal trap(f_JJ[4])*${scale}
variable        k33 equal trap(f_JJ[5])*${scale}

thermo	        $d
thermo_style    custom step temp v_Jx v_Jy v_Jz v_k11 v_k22 v_k33

run             100000

variable        kappa equal (v_k11+v_k22+v_k33)/3.0
print           "running average conductivity: ${kappa}"
